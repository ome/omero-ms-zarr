plugins {
    id 'java'
    id 'application'
    id 'maven-publish'
    id 'com.github.johnrengelman.shadow' version '5.2.0'
}

repositories {
    maven {
        url = 'http://artifacts.openmicroscopy.org/artifactory/maven'
    }
    mavenCentral()
}

dependencies {

    implementation 'ch.qos.logback:logback-classic:1.1.7'
    implementation 'com.j2html:j2html:1.4.0'
    implementation 'org.slf4j:jul-to-slf4j:1.7.30'
    implementation 'org.slf4j:jcl-over-slf4j:1.7.30'

    implementation 'org.openmicroscopy:omero-server:5.5.6'
    implementation 'com.google.guava:guava:27.1-jre'
    implementation 'io.vertx:vertx-core:3.9.1'
    implementation 'io.vertx:vertx-web:3.9.1'

    implementation platform('software.amazon.awssdk:bom:2.11.10')
    implementation 'software.amazon.awssdk:sts'
    implementation 'commons-cli:commons-cli:1.4'

    testImplementation 'org.junit.jupiter:junit-jupiter:5.6.2'
    testImplementation 'org.mockito:mockito-core:3.3.3'
    testImplementation 'org.mockito:mockito-junit-jupiter:3.3.3'
    testImplementation 'io.vertx:vertx-codegen:3.9.1'  // workaround for JDK-8152174
    testImplementation 'software.amazon.awssdk:s3'
}

group = 'org.openmicroscopy'
version = '0.2.0'
description = 'omero-ms-zarr'

java {
    sourceCompatibility = JavaVersion.VERSION_1_8
}

mainClassName = "org.openmicroscopy.ms.zarr.ZarrDataService"

applicationDefaultJvmArgs = [
    "-Dvertx.logger-delegate-factory-class-name=io.vertx.core.logging.SLF4JLogDelegateFactory"
]

shadowJar {
    zip64 true
}

publishing {
    publications {
        maven(MavenPublication) {
            from(components.java)
        }
    }
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

test {
    useJUnitPlatform()
    testLogging {
        events "passed", "skipped", "failed"
        maxGranularity 2
    }
}
